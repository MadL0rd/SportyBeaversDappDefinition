{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","components/Loading/Loading.js","components/Widget/Widget.js","Constants.js","components/Widget/WidgetDiscord.js","components/Widget/WidgetWithBackground.js","components/Dapp/ExampleGif.js","components/Dapp/Dapp.js","components/Widget/WidgetHolderCheck.js","components/Widget/WidgetAcademySignIn.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","dataLoaded","totalSupply","maxSupply","maxMintAmountPerTx","presaleAvailable","cost","presaleCost","balanceOfCurrentWallet","paused","presaleOnly","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","blockchainAccount","dispatch","a","getState","methods","call","balanceOf","presaleWallets","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","switchNetwork","params","currentProvider","chainId","code","alert","message","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","props","color","secondaryColor","height","width","Loading","StyledButton","button","StyledRoundButton","StyledLink","img","Widget","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","loadingDisplay","setLoadingDisplay","openSeaLinkDisplay","setOpenSeaLinkDisplay","purchaseButtonsDisplay","setPurchaseButtonsDisplay","ethInt","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","WEI_COST_PRESALE","DISPLAY_COST","DISPLAY_COST_PRESALE","GAS_LIMIT","GAS_PRICE","MARKETPLACE","MARKETPLACE_LINK","DISCORD_LINK","SET_CONFIG","getData","getConfig","config","useEffect","style","textAlign","fontSize","fontWeight","target","href","length","substring","Number","onClick","e","preventDefault","display","lineHeight","disabled","newMintAmount","decrementMintAmount","mintAmountBorder","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","gasPrice","mint","send","to","from","value","once","err","then","receipt","claimNFTs","Constants","mediaCommonUrl","mediaCollectionDappUrl","siteDomain","WidgetDiscord","walletConnectionStarts","setWalletConnectionStarts","walletLinkingStatusMessage","setWalletLinkingStatusMessage","HttpClient","this","get","aUrl","aCallback","anHttpRequest","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","setRequestHeader","connectWallet","startConnectionReqest","userId","getQueryVariable","url","response","JSON","parse","result","variable","vars","search","split","i","pair","padding","maxWidth","WidgetWithBackground","backgroundColor","borderRadius","boxShadow","widgetInner","ExampleGif","ResponsiveWrapper","StyledLogo","Dapp","SHOW_BACKGROUND","bottomInfo","marginLeft","marginTop","src","WidgetHolderCheck","WidgetAcademySignIn","openApp","deeplinkUrlString","deeplinkUrl","URL","document","createElement","body","appendChild","click","remove","wordBreak","query","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.395e6e6e.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  dataLoaded: false,\n  loading: false,\n  totalSupply: 0,\n  maxSupply: 0,\n  maxMintAmountPerTx: 1,\n  presaleAvailable: false,\n  cost: 0,\n  presaleCost: 0,\n  balanceOfCurrentWallet: 0,\n  paused: true,\n  presaleOnly: true,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        dataLoaded: true,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        maxSupply: action.payload.maxSupply,\n        maxMintAmountPerTx: action.payload.maxMintAmountPerTx,\n        paused: action.payload.paused,\n        presaleOnly: action.payload.presaleOnly,\n        presaleAvailable: action.payload.presaleAvailable,\n        cost: action.payload.cost,\n        presaleCost: action.payload.presaleCost,\n        balanceOfCurrentWallet: action.payload.balanceOfCurrentWallet,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (blockchainAccount) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let maxSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.maxSupply()\n        .call();\n      let maxMintAmountPerTx = await store\n        .getState()\n        .blockchain.smartContract.methods.maxMintAmountPerTx()\n        .call();\n      let paused = await store\n        .getState()\n        .blockchain.smartContract.methods.paused()\n        .call();\n      let presaleOnly = await store\n        .getState()\n        .blockchain.smartContract.methods.presaleOnly()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n      let presaleCost = await store\n        .getState()\n        .blockchain.smartContract.methods.presaleCost()\n        .call();\n      let balanceOfCurrentWallet = await store\n        .getState()\n        .blockchain.smartContract.methods.balanceOf(blockchainAccount)\n        .call();\n      let presaleAvailable = await store\n        .getState()\n        .blockchain.smartContract.methods.presaleWallets(blockchainAccount)\n        .call();\n\n        // alert(\"Givno success!\\npresaleAvailable: \" + presaleAvailable + \" presaleCost: \" + presaleCost + \" totalSupply: \" + totalSupply + \" maxSupply: \" + maxSupply)\n      \n      dispatch(\n        fetchDataSuccess({\n          totalSupply: totalSupply,\n          maxSupply: maxSupply,\n          maxMintAmountPerTx: maxMintAmountPerTx,\n          paused: paused,\n          presaleOnly: presaleOnly,\n          presaleAvailable: presaleAvailable,\n          cost: cost,\n          presaleCost: presaleCost,\n          balanceOfCurrentWallet: balanceOfCurrentWallet\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n          switchNetwork();\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nconst switchNetwork = async () => {\n  const configResponse = await fetch(\"/config/config.json\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  });\n\n  const CONFIG = await configResponse.json();\n  const params = CONFIG.NETWORK.params\n\n  try {\n    await web3.currentProvider.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: params.chainId }],\n    });\n  } catch (error) {\n    if (error.code === 4902) {\n      try {\n        await web3.currentProvider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [ params ],\n        });\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  }\n}\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n\n  transition: max-height 1s ease-in-out;\n  height: auto;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport { \n    Audio, \n    BallTriangle, \n    Bars, \n    Circles,\n    Grid,\n    Hearts,\n    MutatingDots,\n    Oval,\n    Plane,\n    RevolvingDot,\n    Rings,\n    TailSpin,\n    Triangle,\n    Watch\n} from 'react-loader-spinner'\n\nexport const props = {\n    color: 'var(--secondary)',\n    secondaryColor:\"var(--secondary)\",\n    height: 100,\n    width: 110\n}\n\nfunction Loading() {\n\n  return (\n    <div>\n        {/* <img src={\"/config/images/loading.gif\"} style={{ height: 150 }} /> */}\n        <Rings {...props} />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Loading from '../Loading/Loading';\n\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border-radius: 15%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction Widget() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n\n  const [loadingDisplay, setLoadingDisplay] = useState(false);\n  const [openSeaLinkDisplay, setOpenSeaLinkDisplay] = useState(false);\n  const [purchaseButtonsDisplay, setPurchaseButtonsDisplay] = useState(true);\n\n  const ethInt = 1000000000000000000;\n\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    WEI_COST_PRESALE: 0,\n    DISPLAY_COST: 0,\n    DISPLAY_COST_PRESALE: 0,\n    GAS_LIMIT: 0,\n    GAS_PRICE: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    DISCORD_LINK: \"\"\n  });\n\n  const claimNFTs = () => {\n    let cost = data.presaleAvailable ? data.presaleCost : data.cost;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    let gasPrice = CONFIG.GAS_PRICE;\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n\n    setClaimingNft(true);\n    setPurchaseButtonsDisplay(false)\n    setLoadingDisplay(true)\n\n    // alert(gasPrice)\n\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        gasPrice: gasPrice,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please reload page or try again later.\");\n        setClaimingNft(false);\n        setPurchaseButtonsDisplay(true)\n        setLoadingDisplay(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n\n        setPurchaseButtonsDisplay(false)\n        setOpenSeaLinkDisplay(true)\n        setLoadingDisplay(false);\n        \n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    let mintAmountBorder = data.maxMintAmountPerTx;\n    if (newMintAmount > mintAmountBorder) {\n      newMintAmount = mintAmountBorder;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {      \n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    var config = await configResponse.json();\n\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n          >\n            <s.SpacerLarge />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.presaleAvailable ? \"PRESALE\" : \"\"}\n            </s.TextTitle>{\" \"}\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply == 0 ? \"? \" : data.totalSupply} / { (data.maxSupply != null && data.maxSupply != 0) ? data.maxSupply : CONFIG.MAX_SUPPLY} {\" \"}\n            </s.TextTitle>{\" \"}\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {\" \"}\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}{\" \"}\n              </StyledLink>{\" \"}\n            </s.TextDescription>{\" \"}\n            <s.SpacerSmall />{\" \"}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.{\" \"}\n                </s.TextTitle>{\" \"}\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME}\n                  on{\" \"}\n                </s.TextDescription>{\" \"}\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {\" \"}\n                  {CONFIG.MARKETPLACE}{\" \"}\n                </StyledLink>{\" \"}\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  {\n                    data.dataLoaded ?\n                    (\"1 \" + CONFIG.SYMBOL + \" costs \" + (data.presaleAvailable ? (data.presaleCost / ethInt) :  (data.cost / ethInt)) + \" \" + CONFIG.NETWORK.SYMBOL) :\n                    \"Please connect your wallet to load \" + CONFIG.SYMBOL + \" cost\"\n                  }\n                </s.TextTitle>{\" \"}\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.{\" \"}\n                </s.TextDescription>{\" \"}\n                <s.SpacerSmall />{\" \"}\n\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? \n                (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network{\" \"}\n                    </s.TextDescription>{\" \"}\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT{\" \"}\n                    </StyledButton>{\" \"}\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {\" \"}\n                          {blockchain.errorMsg}{\" \"}\n                        </s.TextDescription>{\" \"}\n                      </>\n                    ) : null}{\" \"}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}>\n                        { \n                        !data.dataLoaded \n                          ? feedback \n                          : (data.paused \n                              ? \"Sale suspended. Wait for the sale to start\" \n                              : (data.presaleOnly && !data.presaleAvailable \n                                  ? \"Sorry, now sale is available only for users from the pre-sale list!\"\n                                  : feedback))\n                        }\n                    </s.TextDescription>\n                    <s.Container ai={\"center\"} jc={\"center\"} style={{ display: openSeaLinkDisplay ? \"flex\" : \"none\" }}>\n                      <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                        {\" \"}\n                        {CONFIG.MARKETPLACE}\n                        {\" \"}\n                      </StyledLink>\n                      <s.SpacerMedium/>\n                      <StyledLink target={\"_blank\"} href={CONFIG.DISCORD_LINK}>\n                        {\"Join our Discord server\"}\n                      </StyledLink>{\" \"}\n                    </s.Container>\n                    <div style={{ display: loadingDisplay ? \"block\" : \"none\" }}>\n                      <Loading />\n                    </div>\n                    <div style={{ display: purchaseButtonsDisplay & !data.dataLoaded ? \"block\" : \"none\" }}>\n                      <Loading />\n                    </div>\n                    <s.Container style={{ display: purchaseButtonsDisplay && data.dataLoaded && !data.paused && (!data.presaleOnly || data.presaleAvailable) ? \"block\" : \"none\" }}>\n                      <s.SpacerMedium />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledRoundButton\n                          style={{ lineHeight: 0.4 }}\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            decrementMintAmount();\n                          }}\n                        >\n                          -\n                        </StyledRoundButton>{\" \"}\n                        <s.SpacerMedium />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {\" \"}\n                          {mintAmount}{\" \"}\n                        </s.TextDescription>{\" \"}\n                        <s.SpacerMedium />\n                        <StyledRoundButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            incrementMintAmount();\n                          }}\n                        >\n                          +\n                        </StyledRoundButton>{\" \"}\n                      </s.Container>{\" \"}\n                      <s.SpacerSmall />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {\" \"}\n                          {claimingNft ? \"BUSY\" : \"BUY\"}{\" \"}\n                        </StyledButton>{\" \"}\n\n                      </s.Container>\n\n                    </s.Container>{\" \"}\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerLarge />\n          </s.Container>\n  );\n}\n\nexport default Widget;\n","\n\nconst Constants = {\n    mediaCommonUrl: \"https://storage.ncraftsman.com/media/\",\n    mediaCollectionDappUrl: \"https://storage.ncraftsman.com/media/DappsMedia/NerdyDogs/\",\n    siteDomain: \"dapp.cryptonerds.ncraftsman.com\"\n}\n\nexport default Constants;","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Loading from '../Loading/Loading';\n\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Constants from \"../../Constants\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border-radius: 15%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction WidgetDiscord() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n\n  const [walletConnectionStarts, setWalletConnectionStarts] = useState(false);\n  const [walletLinkingStatusMessage, setWalletLinkingStatusMessage] = useState(\"\");\n  const [loadingDisplay, setLoadingDisplay] = useState(false);\n  const [iframeReqestUrl, setIframeReqestUrl] = useState(\"\");\n\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    WEI_COST_PRESALE: 0,\n    DISPLAY_COST: 0,\n    DISPLAY_COST_PRESALE: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n  });\n\n  var HttpClient = function() {\n    this.get = function(aUrl, aCallback) {\n        var anHttpRequest = new XMLHttpRequest();\n\n        anHttpRequest.onreadystatechange = function() { \n            if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200)\n                aCallback(anHttpRequest.responseText);\n        }\n\n        anHttpRequest.open(\"GET\", aUrl, true);\n        anHttpRequest.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");      \n        anHttpRequest.send( null );\n    }\n}\n\n  const connectWallet = async () => {\n    setLoadingDisplay(true)\n    startConnectionReqest()\n    // window.location.reload();\n  }\n\n  async function startConnectionReqest() {\n    let userId = getQueryVariable(\"user\")\n    let url = \"https://api.discord.ncraftsman.com/connect_wallet/?user_id=\"+ userId +\"&wallet=\" + blockchain.account\n    // setIframeReqestUrl(url)\n\n    setWalletConnectionStarts(true)\n    var client = new HttpClient();\n    client.get(url, async function(response) {\n      let data = JSON.parse(response)\n      setLoadingDisplay(false)\n      if (data.error) {\n        if (data.error == \"Bad request\") {\n            setWalletLinkingStatusMessage(\"Error! Please, press button in discord one more time and follow correct link\")\n        }\n        if (data.error == \"Wrong user id\") {\n          setWalletLinkingStatusMessage(\"Error! Please, press connect button in discord one more time\")\n        }\n        if (data.error == \"Wallet already connected\") {\n            setWalletLinkingStatusMessage(\"Sorry, wallet \" + blockchain.account + \" already connected to another account. If you think that something went wrong, then contact the administrator of the discord server\")\n        }\n        return;\n      }\n      if (data.result) {\n        if (data.result ==\"Success\") {\n            setWalletLinkingStatusMessage(\"Congratulations! Your discord acctount successfily linked to wallet \" + blockchain.account)\n        }\n        return;\n      }\n\n      console.log(data)\n      alert(response)\n    });\n  }\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    var config = await configResponse.json();\n\n    SET_CONFIG(config);\n  };\n\n  function getQueryVariable(variable)\n  {\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i=0;i<vars.length;i++) {\n      var pair = vars[i].split(\"=\")\n      if(pair[0] == variable){\n        return pair[1]\n      }\n    }\n    return(false);\n  }\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n          >\n            <s.SpacerLarge />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Discord connection\n            </s.TextTitle>{\" \"}\n            <s.SpacerSmall />{\" \"}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.{\" \"}\n                </s.TextTitle>{\" \"}\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME}\n                  on{\" \"}\n                </s.TextDescription>{\" \"}\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {\" \"}\n                  {CONFIG.MARKETPLACE}{\" \"}\n                </StyledLink>{\" \"}\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", padding: \"0 1rem\", maxWidth: \"80%\"}}\n                >\n                  { \n                  walletConnectionStarts ? walletLinkingStatusMessage :\n                  blockchain.account ? \n                    \"Press the button down below to connect your discord account with metamask wallet \" + blockchain.account :\n                    \"Please press connect button to link your wallet and discord account\"\n                  }\n                </s.TextTitle>{\" \"}\n                \n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network{\" \"}\n                    </s.TextDescription>{\" \"}\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT{\" \"}\n                    </StyledButton>{\" \"}\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          Or if you trying to connect wallet from phone\n                        </s.TextDescription>{\" \"}\n                    <StyledLink target={\"_blank\"} href={'https://metamask.app.link/dapp/' + Constants.siteDomain + '/?discord=walletconnection&user=' + getQueryVariable(\"user\")}>\n                      Open in metamask app from phone{\" \"}\n                    </StyledLink>{\" \"}\n\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {\" \"}\n                          {blockchain.errorMsg}{\" \"}\n                        </s.TextDescription>{\" \"}\n                      </>\n                    ) : null}{\" \"}\n                  </s.Container>\n                ) : (\n                  <>\n                    <div style={{ display: loadingDisplay ? \"block\" : \"none\" }}>\n                      <Loading />\n                    </div>\n                    <s.Container style={{ display: walletConnectionStarts ? \"none\" : \"block\" }}>\n                      <s.SpacerMedium />\n                  \n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          onClick={(e) => {\n                            e.preventDefault();\n                            connectWallet();\n                            getData();\n                          }}\n                        >\n                          Link wallet \n                        </StyledButton>{\" \"}\n                      </s.Container>\n                      \n                    </s.Container>{\" \"}\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerLarge />\n          </s.Container>\n  );\n}\n\nexport default WidgetDiscord;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport WidgetDiscord from \"./WidgetDiscord\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nimport Widget from './Widget';\n\nfunction WidgetWithBackground(props) {\n\n  return (\n    <s.Container\n    style={{\n      backgroundColor: \"var(--accent)\",\n      borderRadius: 24,\n      boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n    }}\n  >\n    \n    { props.widgetInner }\n  </s.Container>\n  );\n}\n\nexport default WidgetWithBackground;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport * as s from \"../../styles/globalStyles\";\nimport Constants from \"../../Constants\";\nimport styled from \"styled-components\";\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border-radius: 15%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nfunction ExampleGif() {\n\n  return (\n    <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n        {/* <StyledImg \n        alt={\"example\"}\n        src={Constants.mediaCollectionDappUrl + \"example.gif\"}\n        /> */}\n    </s.Container>\n  );\n}\n\nexport default ExampleGif;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\n\nimport WidgetWithBackground from '../Widget/WidgetWithBackground';\nimport Widget from \"../Widget/Widget\";\nimport ExampleGif from \"./ExampleGif\";\n\nimport Constants from \"../../Constants\";\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction Dapp(props) {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    GAS_PRICE: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? Constants.mediaCollectionDappUrl + \"bg.png\" : null}\n      >\n        {/* <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />{\" \"} */}\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} >\n\n          <ExampleGif/>\n\n          <s.SpacerLarge />\n            <s.Container\n              flex={2}\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                padding: 24\n              }}\n            >\n              <WidgetWithBackground widgetInner={props.widgetInner} />\n            </s.Container>\n          <s.SpacerLarge />\n\n          <ExampleGif/>\n        </ResponsiveWrapper>\n\n        {\n          props.bottomInfo == false ? \n          <s.SpacerSmall /> :\n          <s.Container jc={\"center\"} ai={\"center\"} \n            style={{\n              backgroundColor: \"var(--accent)\",\n              borderRadius: 24,\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n              width: \"60%\"\n            }}>\n            <s.SpacerSmall />\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Please make sure you are connected to the right network({CONFIG.NETWORK.NAME} ) and the correct address. \n              <br/> Please note: Once you make the purchase, you cannot undo this action.\n              <br/> We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to successfully mint your NFT.We recommend that you don 't lower the gas limit.{\" \"}\n            </s.TextDescription>{\" \"}\n            <s.SpacerSmall />     \n          </s.Container>\n        }\n        \n        <a href=\"https://www.ncraftsman.com/\" style={{ marginLeft: \"auto\",  marginTop: \"auto\" }} target=\"_blank\">\n          <StyledLogo src={Constants.mediaCommonUrl + \"designed.png\"}  style={{ width:400, marginTop: \"auto\" }} />\n        </a>\n      </s.Container>{\" \"}\n    </s.Screen>\n  );\n}\n\nexport default Dapp;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Loading from '../Loading/Loading';\n\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Constants from \"../../Constants\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border-radius: 15%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction WidgetHolderCheck() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n\n  const [walletConnectionStarts, setWalletConnectionStarts] = useState(false);\n  const [walletLinkingStatusMessage, setWalletLinkingStatusMessage] = useState(\"\");\n  const [loadingDisplay, setLoadingDisplay] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [iframeReqestUrl, setIframeReqestUrl] = useState(\"\");\n\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    WEI_COST_PRESALE: 0,\n    DISPLAY_COST: 0,\n    DISPLAY_COST_PRESALE: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n  });\n\n  const connectWallet = async () => {\n    setLoadingDisplay(true)\n    startConnectionReqest()\n  }\n\n  async function startConnectionReqest() {\n\n    setWalletConnectionStarts(true)\n\n    let addressPrepared = blockchain.account\n    addressPrepared = addressPrepared.replace('0x', '');\n    \n    const response = await fetch('https://polygon-rpc.com/', {\n        method: 'POST',\n        headers: {\n          'authority': 'polygon-rpc.com',\n          'accept': '*/*',\n          'content-type': 'application/json',\n          'origin': 'https://polygonscan.com',\n          'referer': 'https://polygonscan.com/',\n          'sec-fetch-dest': 'empty',\n          'sec-fetch-mode': 'cors',\n          'sec-fetch-site': 'cross-site',\n      },\n        body: JSON.stringify({\n            'jsonrpc': '2.0',\n            'id': 2,\n            'method': 'eth_call',\n            'params': [\n                {\n                    'from': '0x0000000000000000000000000000000000000000',\n                    'data': '0x70a08231000000000000000000000000' + addressPrepared,\n                    'to': CONFIG.CONTRACT_ADDRESS\n                },\n                'latest'\n            ]\n        })\n    })\n    await response.json().then((data) => {\n      console.log(data)\n      let balance = Number(data.result)\n      setBalance(balance)\n      setLoadingDisplay(false)\n    });\n  }\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    var config = await configResponse.json();\n\n    SET_CONFIG(config);\n  };\n\n  function getQueryVariable(variable)\n  {\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i=0;i<vars.length;i++) {\n      var pair = vars[i].split(\"=\")\n      if(pair[0] == variable){\n        return pair[1]\n      }\n    }\n    return(false);\n  }\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n          <s.Container>\n            <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            height={\"100%\"}\n            style={{ display: balance == 0 ? \"flex\" : \"none\" }}\n            >\n              <s.SpacerLarge />\n              <s.TextTitle\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 50,\n                  fontWeight: \"bold\",\n                  color: \"var(--accent-text)\",\n                }}\n              >\n                Get access to content\n              </s.TextTitle>{\" \"}\n              <s.SpacerSmall />{\" \"}\n                <>\n                  <s.TextTitle\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\", padding: \"0 1rem\", maxWidth: \"80%\"}}\n                  >\n                    { \n                    walletConnectionStarts ? walletLinkingStatusMessage :\n                    blockchain.account ? \n                      \"Press the button down below to confirm that wallet \" + blockchain.account + \" hold CryptoNerdNFT\" :\n                      \"Please press connect button to confirm that you have CryptoNerdNFT\"\n                    }\n                  </s.TextTitle>{\" \"}\n                  \n                  {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        Connect to the {CONFIG.NETWORK.NAME} network{\" \"}\n                      </s.TextDescription>{\" \"}\n                      <s.SpacerSmall />\n                      <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        CONNECT{\" \"}\n                      </StyledButton>{\" \"}\n\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {\" \"}\n                            {blockchain.errorMsg}{\" \"}\n                          </s.TextDescription>{\" \"}\n                        </>\n                      ) : null}{\" \"}\n                    </s.Container>\n                  ) : (\n                    <>\n                      <div style={{ display: loadingDisplay ? \"block\" : \"none\" }}>\n                        <Loading />\n                      </div>\n                      <s.Container style={{ display: walletConnectionStarts ? \"none\" : \"block\" }}>\n                        <s.SpacerMedium />\n                    \n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <StyledButton\n                            onClick={(e) => {\n                              e.preventDefault();\n                              connectWallet();\n                              getData();\n                            }}\n                          >\n                            Load NFTs\n                          </StyledButton>{\" \"}\n                        </s.Container>\n                        \n                      </s.Container>{\" \"}\n                    </>\n                  )}\n                </>\n              <s.SpacerLarge />\n            </s.Container>\n            <s.Container \n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            height={\"100%\"}\n            style={{ display: balance > 0 ? \"flex\" : \"none\" }}\n            >\n              <iframe src=\"https://crypto-nerds.de/mint_nft\"\n              width={\"100%\"}\n              height={\"100%\"}\n              marginHeight={0}\n              padding={0}\n              >\n                Your browser does not support floating iframes!\n              </iframe>\n            </s.Container>\n          </s.Container>\n  );\n}\n\nexport default WidgetHolderCheck;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport * as s from \"../../styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Loading from '../Loading/Loading';\n\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Constants from \"../../Constants\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border-radius: 15%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction WidgetAcademySignIn() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n\n  const [walletConnectionStarts, setWalletConnectionStarts] = useState(false);\n  const [walletLinkingStatusMessage, setWalletLinkingStatusMessage] = useState(\"\");\n  const [loadingDisplay, setLoadingDisplay] = useState(false);\n  const [iframeReqestUrl, setIframeReqestUrl] = useState(\"\");\n\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    WEI_COST_PRESALE: 0,\n    DISPLAY_COST: 0,\n    DISPLAY_COST_PRESALE: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n  });\n\n  var HttpClient = function() {\n    this.get = function(aUrl, aCallback) {\n        var anHttpRequest = new XMLHttpRequest();\n\n        anHttpRequest.onreadystatechange = function() { \n            if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200)\n                aCallback(anHttpRequest.responseText);\n        }\n\n        anHttpRequest.open(\"GET\", aUrl, true);\n        anHttpRequest.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");      \n        anHttpRequest.send( null );\n    }\n}\n\n  const connectWallet = async () => {\n    // setLoadingDisplay(true)\n    startConnectionReqest()\n    // window.location.reload();\n  }\n\n  function openApp() {\n    var deeplinkUrlString = \"cnacademy://auth-main/\" + blockchain.account;\n    var deeplinkUrl = new URL(deeplinkUrlString);\n    window.open(deeplinkUrl);\n\n    const a = document.createElement(\"a\");\n    a.href = deeplinkUrlString;\n    a.target = \"_self\";\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n}\n\n  async function startConnectionReqest() {\n    openApp()\n    // let url = \"cnacademy://auth-main/\" + blockchain.account\n    // alert(url)\n    // window.open(url, \"_self\")\n    // setIframeReqestUrl(url)\n    // setWalletConnectionStarts(true)\n  }\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    var config = await configResponse.json();\n\n    SET_CONFIG(config);\n  };\n\n  function getQueryVariable(variable)\n  {\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i=0;i<vars.length;i++) {\n      var pair = vars[i].split(\"=\")\n      if(pair[0] == variable){\n        return pair[1]\n      }\n    }\n    return(false);\n  }\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n          >\n            <s.SpacerLarge />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Sign in\n            </s.TextTitle>{\" \"}\n            <s.SpacerSmall />{\" \"}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.{\" \"}\n                </s.TextTitle>{\" \"}\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME}\n                  on{\" \"}\n                </s.TextDescription>{\" \"}\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {\" \"}\n                  {CONFIG.MARKETPLACE}{\" \"}\n                </StyledLink>{\" \"}\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", padding: \"0 1rem\", maxWidth: \"80%\", wordBreak: \"break-word\"}}\n                >\n                  { \n                  walletConnectionStarts ? walletLinkingStatusMessage :\n                  blockchain.account ? \n                    \"Press the button down below to connect your metamask wallet \" + blockchain.account :\n                    \"Please press connect button to link your wallet\"\n                  }\n                </s.TextTitle>{\" \"}\n                <StyledLink href={\"cnacademy://auth-main/\" + blockchain.account}>\n                  Gamno\n                </StyledLink>\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network{\" \"}\n                    </s.TextDescription>{\" \"}\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT{\" \"}\n                    </StyledButton>{\" \"}\n\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {\" \"}\n                          {blockchain.errorMsg}{\" \"}\n                        </s.TextDescription>{\" \"}\n                      </>\n                    ) : null}{\" \"}\n                  </s.Container>\n                ) : (\n                  <>\n                    <div style={{ display: loadingDisplay ? \"block\" : \"none\" }}>\n                      <Loading />\n                    </div>\n                    <s.Container style={{ display: walletConnectionStarts ? \"none\" : \"block\" }}>\n                      <s.SpacerMedium />\n                  \n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          onClick={(e) => {\n                            e.preventDefault();\n                            connectWallet();\n                            getData();\n                          }}\n                        >\n                          Link wallet \n                        </StyledButton>{\" \"}\n                      </s.Container>\n                      \n                    </s.Container>{\" \"}\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerLarge />\n          </s.Container>\n  );\n}\n\nexport default WidgetAcademySignIn;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Widget from './components/Widget/Widget';\nimport WidgetWithBackground from './components/Widget/WidgetWithBackground';\nimport Dapp from './components/Dapp/Dapp';\nimport WidgetHolderCheck from \"./components/Widget/WidgetHolderCheck\";\nimport WidgetAcademySignIn from \"./components/Widget/WidgetAcademySignIn\";\nimport WidgetDiscord from \"./components/Widget/WidgetDiscord\";\n\nfunction getQueryVariable(variable)\n{\n  var query = window.location.search.substring(1);\n  console.log(query)//\"app=article&act=news_content&aid=160990\"\n  var vars = query.split(\"&\");\n  console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n  for (var i=0;i<vars.length;i++) {\n              var pair = vars[i].split(\"=\");\n              console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \n  if(pair[0] == variable){return pair[1];}\n  }\n  return(false);\n}\n\nfunction App() {\n\n  switch (getQueryVariable(\"widget\")) {\n    case \"clear\":\n      return <Widget/>\n\n    case \"withbackground\":\n      return <WidgetWithBackground widgetInner={<Widget/>}/>\n\n    case \"cnacademy\":\n      return <Dapp widgetInner={<WidgetAcademySignIn/>} bottomInfo={false} />\n  }\n\n  if (getQueryVariable(\"discord\") == \"walletconnection\") {\n    return <Dapp widgetInner={<WidgetDiscord/>} bottomInfo={false}/>\n  }\n\n  return <Dapp widgetInner={<WidgetWithBackground widgetInner={<Widget/>}/>}/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}